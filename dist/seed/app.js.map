{"version":3,"sources":["../../src/seed/index.ts","../../src/seed/components/App/App.ts","../../src/seed/components/Nav/index.ts","../../src/seed/components/Nav/Nav.ts","../../src/seed/services/userDataService.ts","../../src/seed/components/Footer/index.ts","../../src/seed/components/Footer/Footer.ts","../../src/seed/components/Forecast/index.ts","../../src/seed/components/Forecast/Forecast.ts","../../src/seed/services/forecastDataservice.ts","../../src/seed/components/CurrentWeather/index.ts","../../src/seed/components/CurrentWeather/CurrentWeather.ts","../../src/seed/components/DailyForecast/index.ts","../../src/seed/components/DailyForecast/DailyForecast.ts","../../src/seed/components/Login/index.ts","../../src/seed/components/Login/Login.ts","../../src/seed/components/Register/index.ts","../../src/seed/components/Register/Register.ts","../../src/seed/components/Confirm/index.ts","../../src/seed/components/Confirm/Confirm.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,8CAAsB;AACtB,4DAAgC;AAEhC,uEAA2C;AAE3C,8BAA4B;AAE5B,aAAG,CAAC,GAAG,CAAC,oBAAM,CAAC,CAAC;AAEhB,IAAI,aAAG,CAAC;IACJ,EAAE,EAAE,MAAM;IACV,MAAM,EAAE,IAAI,oBAAM,CAAC;QACf,MAAM,EAAE;YACJ;gBACI,IAAI,EAAE,GAAG;gBACT,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,uBAAuB,CAAC;aACnD;YACD;gBACI,IAAI,EAAE,QAAQ;gBACd,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,oBAAoB,CAAC;aAChD;YACD;gBACI,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,uBAAuB,CAAC;aACnD;YACD;gBACI,IAAI,EAAE,iBAAiB;gBACvB,IAAI,EAAE,SAAS;gBACf,KAAK,EAAE,IAAI;gBACX,SAAS,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,sBAAsB,CAAC;aAClD;SAEJ;KACJ,CAAC;IACF,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,iBAAG,CAAC;CACtB,CAAC,CAAC;;;;;;;;;;;;;;;;;ACtCH,8CAAsB;AACtB,iDAA4C;AAC5C,iDAAyB;AACzB,uDAA8B;AAC9B,4CAAyC;AACzC,gDAA6C;AAE7C,aAAG,CAAC,GAAG,CAAC,4BAAY,CAAC,CAAC;AAGtB,kBAAe,aAAG,CAAC,MAAM,CAAC;IACxB,IAAI,EAAE,KAAK;IACX,UAAU,EAAE,EAAE,GAAG,EAAH,aAAG,EAAE,MAAM,EAAN,gBAAM,EAAE;CAC5B,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;ACbH,wDAA4B;AAE5B,kBAAe,iBAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACFnB,8CAAsB;AAQtB,kBAAe,aAAG,CAAC,MAAM,CAAC;IACtB,IAAI,EAAE,KAAK;IACX,IAAI;QACA,OAAO;YACH,IAAI,EAAE;gBACF,OAAO,EAAE,KAAK;aACjB;SACJ,CAAA;IACL,CAAC;IACK,OAAO;;YACT,IAAI,CAAC,UAAU,EAAE,CAAC;QACtB,CAAC;KAAA;IACD,OAAO,EAAE;QACC,UAAU;;gBACZ,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;oBAC9B,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;iBAC5B;YACL,CAAC;SAAA;QACD,MAAM;YACF,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAChC,QAAQ,CAAC,MAAM,EAAE,CAAC;QACtB,CAAC;KACJ;CACJ,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACeH,MAAM,IAAI,GAAS;IACjB,OAAO,EAAE,uBAAuB;IAC1B,KAAK,CAAoB,MAAW,EAAE,KAAU,EAAE,SAAc;;YACpE,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,EAAE,EAAE;gBACnD,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE;oBACP,cAAc,EAAE,kBAAkB;iBACnC;gBACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;aAC3C,CAAC,CAAC;YAEH,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;gBACtB,MAAM,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;aAC/B;YAED,MAAM,IAAI,GAA4B,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;YAEvD,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,MAAM,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;aACrC;YAED,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;KAAA;CACF,CAAC;AAEW,QAAA,KAAK,GAAG;IACb,QAAQ,CAAC,KAAa,EAAE,QAAgB,EAAE,YAAoB;;YAClE,OAAO,MAAM,IAAI,CAAC,KAAK,CAAO,MAAM,EAAE;;yBAEjB,KAAK;qBACT,QAAQ;yBACJ,YAAY;;;;;KAKhC,CAAC,CAAA;QACJ,CAAC;KAAA;IACK,KAAK,CAAC,KAAa,EAAE,QAAgB;;YACzC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,KAAK,CAAgB,MAAM,EAAE;;qBAEpC,KAAK,gBAAgB,QAAQ;;;;;KAK7C,CAAC,CAAC;YACL,OAAO,IAAI,CAAC;QACZ,CAAC;KAAA;IACK,QAAQ,CAAC,IAAmB;;YAChC,IAAI,IAAI,KAAK,IAAI,EAAE;gBACjB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,KAAK,CAAa,MAAM,EAAE;wBACnC,IAAI,KAAK,CAAC,CAAC;gBAC7B,OAAO,OAAO,CAAC,QAAQ,CAAC;aACzB;;gBACI,OAAO,KAAK,CAAC;QACpB,CAAC;KAAA;IACK,OAAO,CAAC,KAAa;;YACzB,IAAI,KAAK,KAAK,IAAI,EAAE;gBAClB,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,KAAK,CAAe,MAAM,EAAE;yBACtC,KAAK;QACtB,CAAC,CAAC;gBACJ,OAAO,SAAS,CAAC,OAAO,CAAC;aAC1B;;gBACI,OAAO,KAAK,CAAC;QACpB,CAAC;KAAA;IACK,UAAU,CAAC,MAAc,EAAE,IAAY;;YAC3C,IAAI,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;gBAClC,OAAO,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;6BACT,MAAM,YAAY,IAAI;QAC3C,CAAC,CAAC;aACL;QACH,CAAC;KAAA;IACK,UAAU,CAAC,IAAY;;YAC3B,IAAI,IAAI,IAAI,IAAI,EAAE;gBAChB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,KAAK,CAAU,MAAM,EAAE;uBACjC,IAAI;;;;MAIrB,CAAC,CAAC;gBACF,OAAO,OAAO,CAAC;aAChB;QACH,CAAC;KAAA;CACF,CAAA;;;;;;;;;;AClID,8DAAkC;AAElC,kBAAe,oBAAM,CAAC;;;;;;;;;;;;;;;;ACFtB,8CAAsB;AAEtB,kBAAe,aAAG,CAAC,MAAM,CAAC;IACtB,IAAI,EAAE,QAAQ;CACjB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACJH,kEAAsC;AACtC,kBAAe,sBAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACDxB,8CAAsB;AACtB,4EAA+E;AAC/E,uEAA+C;AAC/C,iDAAmE;AACnE,oEAAuD;AAYvD,kBAAe,aAAG,CAAC,MAAM,CAAC;IACtB,IAAI,EAAE,UAAU;IAChB,UAAU,EAAE,EAAE,cAAc,EAAd,wBAAc,EAAE,KAAK,EAAL,qBAAK,EAAE,aAAa,EAAb,6BAAa,EAAE,YAAY,EAAZ,4BAAY,EAAE;IAClE,IAAI;QACA,OAAO;YACH,IAAI,EAAE;gBACF,QAAQ,EAAE,EAAE;gBACZ,aAAa,EAAE,EAAE;gBACjB,UAAU,EAAE,KAAK;gBACjB,QAAQ,EAAE,EAAE;aACf;SACJ,CAAA;IACL,CAAC;IACK,OAAO;;YACT,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;YACzB,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;QAC7B,CAAC;KAAA;IACD,OAAO,EAAE;QACC,WAAW;;gBACb,IAAI;oBACA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBACxD,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;wBACtC,qCAAe,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;;4BACjD,MAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,0CAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;4BACnC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;4BAC5B,OAAO,QAAQ,CAAC;wBACpB,CAAC,CAAC,CAAC;oBACP,CAAC,CAAC,CAAA;iBACL;gBACD,OAAO,KAAK,EAAE;oBACV,KAAK,CAAC,KAAK,CAAC,CAAC;iBAChB;YAEL,CAAC;SAAA;QACK,OAAO;;gBACT,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACjD,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YAC5B,CAAC;SAAA;QACK,iBAAiB;;gBACnB,SAAS,CAAC,WAAW,CAAC,kBAAkB,CACpC,QAAQ,CAAC,EAAE;oBACP,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,KAAK,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;gBACvF,CAAC,CACJ,CAAA;YACL,CAAC;SAAA;QACD,UAAU;YACN,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBAC9B,MAAM,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBAC1C,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;gBAClD,IAAI,IAAI,KAAK,IAAI,IAAI,MAAM,KAAK,EAAE,EAAE;oBAChC,uBAAK,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;oBAC/B,KAAK,CAAC,oBAAoB,CAAC,CAAC;iBAC/B;aACJ;;gBACI,KAAK,CAAC,wBAAwB,CAAC,CAAC;QACzC,CAAC;QACD,UAAU,CAAC,KAAa;YACpB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC;QACK,WAAW;;gBACb,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;oBAC9B,MAAM,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBAC1C,IAAI,IAAI,IAAI,IAAI,EAAE;wBACd,MAAM,uBAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;4BAC3C,IAAI,QAAQ,IAAI,SAAS,EAAE;gCACvB,MAAM,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC;gCACpC,IAAI,GAAG,IAAI,EAAE,EAAE;oCACX,MAAM,GAAG,GAAkB,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oCAC1C,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;wCAClB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oCACxC,CAAC,CAAC,CAAA;iCACL;6BACJ;wBACL,CAAC,CAAC,CAAC;qBACN;iBACJ;YACL,CAAC;SAAA;QACD,SAAS,CAAC,CAAgB;YACtB,IAAI,CAAC,CAAC,GAAG,KAAK,OAAO,EAAE;gBACnB,IAAI,CAAC,OAAO,EAAE,CAAC;aAClB;QACL,CAAC;KACJ;CACJ,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSH,MAAM,IAAI,GAAS;IACjB,OAAO,EAAE,uBAAuB;IAC1B,KAAK,CAAoB,MAAW,EAAE,KAAU,EAAE,SAAc;;YACpE,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,EAAE,EAAE;gBACnD,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE;oBACP,cAAc,EAAE,kBAAkB;iBACnC;gBACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;aAC3C,CAAC,CAAC;YAEH,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;gBACtB,MAAM,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;aAC/B;YAED,MAAM,IAAI,GAA4B,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;YAEvD,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,MAAM,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;aACrC;YAED,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;KAAA;CACF,CAAC;AAEW,QAAA,eAAe,GAAG;IACvB,WAAW,CAAC,QAAgB;;YAChC,OAAO,MAAM,IAAI,CAAC,KAAK,CAAoB,UAAU,EAAE;;0BAEjC,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA4C7B,CAAC,CAAC;QACL,CAAC;KAAA;CACF,CAAA;;;;;;;;;;ACzLD,8EAAkD;AAElD,kBAAe,4BAAc,CAAC;;;;;;;;;;;;;;;;;ACF9B,8CAAsB;AACtB,qEAA6C;AAC7C,kBAAe,aAAG,CAAC,MAAM,CAAC;IACtB,IAAI,EAAE,gBAAgB;IACtB,UAAU,EAAC,EAAC,aAAa,EAAb,uBAAa,EAAC;IAC1B,KAAK,EAAC,CAAC,gBAAgB,CAAC;CAC3B,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;ACNH,4EAAgD;AAEhD,kBAAe,2BAAa,CAAC;;;;;;;;;;;;;;;;;ACF7B,8CAAsB;AACtB,kBAAe,aAAG,CAAC,MAAM,CAAC;IACtB,IAAI,EAAE,eAAe;IACrB,KAAK,EAAE,CAAC,YAAY,CAAC;CACxB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;ACJH,4DAAgC;AAEhC,kBAAe,mBAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACDrB,8CAAsB;AAEtB,oEAA2E;AAU3E,kBAAe,aAAG,CAAC,MAAM,CAAC;IACtB,IAAI,EAAE,OAAO;IACb,IAAI;QACA,OAAO;YACH,IAAI,EAAE;gBACF,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,EAAE;gBACZ,KAAK,EAAE,IAAI;gBACX,SAAS,EAAE,KAAK;gBAChB,cAAc,EAAC,KAAK;aACvB;SACJ,CAAA;IACL,CAAC;IACD,OAAO;QACH,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IACD,OAAO,EAAE;QACC,KAAK,CAAC,KAAa,EAAE,QAAgB;;gBACvC,IAAI;oBACA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;wBAC3B,MAAM,uBAAK,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;4BACjD,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;wBACtD,CAAC,CAAC,CAAC;qBACN;oBACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACxB,QAAQ,CAAC,MAAM,EAAE,CAAC;iBAErB;gBACD,OAAO,KAAK,EAAE;oBACV,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;iBAC3B;YAEL,CAAC;SAAA;QACK,YAAY;;gBACd,IAAI;oBACA,MAAM,uBAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;wBAC/D,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;wBACpC,OAAO,QAAQ,CAAC;oBACpB,CAAC,CAAC,CAAC;iBACN;gBACD,OAAO,GAAG,EAAE;oBACR,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;iBACzB;YACL,CAAC;SAAA;KACJ;CACJ,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1DH,kEAAsC;AAEtC,kBAAe,sBAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACFxB,8CAAsB;AACtB,oEAAsD;AAUtD,kBAAe,aAAG,CAAC,MAAM,CAAC;IACtB,IAAI,EAAE,UAAU;IAChB,IAAI;QACA,OAAO;YACH,IAAI,EAAE;gBACF,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,EAAE;gBACZ,YAAY,EAAC,EAAE;gBACf,SAAS,EAAE,KAAK;gBAChB,KAAK,EAAE,IAAI;aACd;SACJ,CAAA;IACL,CAAC;IACD,OAAO,EAAE;QACC,QAAQ,CAAC,KAAa,EAAE,QAAgB,EAAE,YAAoB;;gBAChE,IAAI;oBACA,MAAM,uBAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;wBAClE,KAAK,CAAC,0BAA0B,CAAC,CAAC;wBAClC,OAAO,QAAQ,CAAC;oBACpB,CAAC,CAAC,CAAC;iBAEN;gBACD,OAAO,KAAK,EAAE;oBACV,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;iBAC3B;YAEL,CAAC;SAAA;KACJ;CACJ,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCH,gEAAoC;AAEpC,kBAAe,qBAAO,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACFvB,8CAAsB;AACtB,oEAAuD;AACvD,kBAAe,aAAG,CAAC,MAAM,CAAC;IACtB,IAAI,EAAE,SAAS;IACf,KAAK,EAAE;QACH,KAAK,EAAE;YACH,IAAI,EAAE,MAAkC;SAC3C;KACJ;IACD,OAAO;QACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IACD,OAAO,EAAE;QACC,OAAO,CAAC,KAAyB;;gBACnC,IAAI,KAAK,KAAK,SAAS,EAAE;oBACrB,KAAK,CAAC,oBAAoB,CAAC,CAAC;iBAC/B;;oBACI,OAAO,MAAM,uBAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACvC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;YACzC,CAAC;SAAA;KACJ;CACJ,CAAC,CAAC","file":"","sourcesContent":["import Vue from 'vue';\r\nimport Router from 'vue-router';\r\n\r\nimport App from './components/App/App.vue';\r\n\r\nimport './assets/style.css';\r\n\r\nVue.use(Router);\r\n\r\nnew Vue({\r\n    el: '#app',\r\n    router: new Router({\r\n        routes: [\r\n            {\r\n                path: '/',\r\n                name: 'forecast',\r\n                component: () => import('./components/Forecast')\r\n            },\r\n            {\r\n                path: '/login',\r\n                name: 'Login',                \r\n                component: () => import('./components/Login')\r\n            },\r\n            {\r\n                path: '/register',\r\n                name: 'Register',                \r\n                component: () => import('./components/Register')\r\n            },\r\n            {\r\n                path: '/confirm/:email',\r\n                name: 'Confirm',\r\n                props: true,\r\n                component: () => import('./components/Confirm')\r\n            }\r\n            \r\n        ]\r\n    }),\r\n    render: h => h(App),\r\n});\r\n","import Vue from 'vue';\r\nimport { BootstrapVue} from 'bootstrap-vue';\r\nimport Nav from '../Nav';\r\nimport Footer from '../Footer'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\r\n\r\nVue.use(BootstrapVue);\r\n\r\n\r\nexport default Vue.extend({\r\n  name: 'App',\r\n  components: { Nav, Footer }\r\n});","import Nav from './Nav.vue';\r\n\r\nexport default Nav;","import Vue from 'vue';\r\nimport { users } from '../../services/userDataService';\r\n\r\ninterface Data {\r\n    data: {\r\n        isValid: Boolean;\r\n    }\r\n}\r\nexport default Vue.extend({\r\n    name: 'Nav',\r\n    data(): Data {\r\n        return {\r\n            data: {\r\n                isValid: false\r\n            }\r\n        }\r\n    },\r\n    async mounted() {\r\n        this.isloggedIn();\r\n    },\r\n    methods: {\r\n        async isloggedIn() {\r\n            if (localStorage.getItem('ukey')) {\r\n                this.data.isValid = true;\r\n            }\r\n        },\r\n        logout() {\r\n            localStorage.removeItem('ukey');\r\n            location.reload();\r\n        }\r\n    }\r\n});","import { getDirectiveValues, validate } from \"graphql\";\r\nimport { getParsedCommandLineOfConfigFile } from \"typescript\";\r\nimport { Validate } from \"../../node-test/models/user\";\r\n\r\ninterface GraphQLError {\r\n  message: string;\r\n}\r\n\r\nexport interface GraphQLQueryResponse<T extends {} = {}> {\r\n  data: T;\r\n  errors?: GraphQLError[];\r\n}\r\n\r\nexport interface User {\r\n  ukey: string,\r\n  access_token: string\r\n}\r\n\r\nexport interface LoginResponse {\r\n  login: {\r\n    access_token: string;\r\n    ukey: string;\r\n  }\r\n}\r\nexport interface Validation {\r\n  validate: boolean\r\n}\r\nexport interface Confirmation {\r\n  confirm: boolean\r\n}\r\nexport interface Profile {\r\n  profile: {\r\n    ukey: string;\r\n    cities: string;\r\n  }\r\n}\r\nexport interface RegisterResponse {\r\n  ukey: string,\r\n  confirm_token: string\r\n}\r\n\r\ninterface Base {\r\n  address: string;\r\n  query<T extends {} = {}>(domain: string, query: string, variables?: {}): Promise<T>;\r\n}\r\n\r\nconst base: Base = {\r\n  address: 'http://localhost:3000',\r\n  async query<T extends {} = {}>(domain: any, query: any, variables: any) {\r\n    const res = await fetch(`${this.address}/${domain}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ query, variables })\r\n    });\r\n\r\n    if (res.status === 404) {\r\n      throw Error(await res.text());\r\n    }\r\n\r\n    const json: GraphQLQueryResponse<T> = await res.json();\r\n\r\n    if (json.errors) {\r\n      throw Error(json.errors[0].message);\r\n    }\r\n\r\n    return json.data;\r\n  }\r\n};\r\n\r\nexport const users = {\r\n  async register(email: string, password: string, confirmation: string) {\r\n    return await base.query<User>('user', `\r\n    mutation{\r\n      register(email: \"${email}\",\r\n         password:\"${password}\",\r\n         confirmation:\"${confirmation}\"){\r\n          ukey,\r\n          confirm_token\r\n      }\r\n    }\r\n    `)\r\n  },\r\n  async login(email: string, password: string) {\r\n    const user = await base.query<LoginResponse>('user', `\r\n    mutation{\r\n      login(email:\"${email}\", password:\"${password}\"){\r\n       ukey,\r\n       access_token\r\n     }\r\n   }\r\n    `);\r\n  return user;\r\n  },\r\n  async validate(ukey: string | null) {\r\n    if (ukey !== null) {\r\n      const isValid = await base.query<Validation>('user', `query{\r\n      validate(ukey: \"${ukey}\")}`);\r\n      return isValid.validate;\r\n    }\r\n    else return false;\r\n  },\r\n  async confirm(email: string) {\r\n    if (email !== null) {\r\n      const isConfirm = await base.query<Confirmation>('user', `mutation{\r\n        confirm(email:\"${email}\")\r\n      }`);\r\n      return isConfirm.confirm;\r\n    }\r\n    else return false;\r\n  },\r\n  async saveCities(cities: string, ukey: string) {\r\n    if (cities != null && ukey != null) {\r\n      return await base.query('user', `mutation{\r\n        saveCities(cities:\"${cities}\", ukey:\"${ukey}\")\r\n      }`);\r\n    }\r\n  },\r\n  async getProfile(ukey: string) {\r\n    if (ukey != null) {\r\n      const profile = await base.query<Profile>('user', `query{\r\n      profile(ukey: \"${ukey}\"){\r\n        ukey\r\n        cities\r\n      }\r\n    }`);\r\n      return profile;\r\n    }\r\n  }\r\n}","import Footer from './Footer.vue';\r\n\r\nexport default Footer;","import Vue from 'vue';\r\n\r\nexport default Vue.extend({\r\n    name: 'Footer'\r\n});","import Forecast from './Forecast.vue';\r\nexport default Forecast;","import Vue from 'vue';\r\nimport { Forecast, forecastService } from '../../services/forecastDataservice';\r\nimport CurrentWeather from '../CurrentWeather';\r\nimport { BIcon, BIconBullseye, BIconXCircle } from 'bootstrap-vue';\r\nimport { users } from '../../services/userDataService';\r\n\r\n\r\ninterface Data {\r\n    data: {\r\n        forecast: Forecast[],\r\n        locationArray: Array<string>,\r\n        dataLoaded: boolean,\r\n        location: string\r\n    }\r\n}\r\n\r\nexport default Vue.extend({\r\n    name: 'Forecast',\r\n    components: { CurrentWeather, BIcon, BIconBullseye, BIconXCircle },\r\n    data(): Data {\r\n        return {\r\n            data: {\r\n                forecast: [],\r\n                locationArray: [],\r\n                dataLoaded: false,\r\n                location: ''\r\n            }\r\n        }\r\n    },\r\n    async created() {\r\n        await this.getLocation();\r\n        await this.getForecast();\r\n    },\r\n    methods: {\r\n        async getForecast() {\r\n            try {\r\n                this.data.forecast.splice(0, this.data.forecast.length);\r\n                this.data.locationArray.forEach((value) => {\r\n                    forecastService.getForecast(value).then((response) => {\r\n                        this.data.forecast?.push(response);\r\n                        this.data.dataLoaded = true;\r\n                        return response;\r\n                    });\r\n                })\r\n            }  \r\n            catch (error) {\r\n                alert(error);\r\n            }\r\n\r\n        },\r\n        async addCity() {\r\n            this.data.locationArray.push(this.data.location);\r\n            this.getForecast();\r\n            this.data.location = '';\r\n        },\r\n        async getClientLocation() {\r\n            navigator.geolocation.getCurrentPosition(\r\n                position => {\r\n                    this.data.location = (`${position.coords.latitude}, ${position.coords.longitude}`);\r\n                }\r\n            )\r\n        },\r\n        saveCities() {\r\n            if (localStorage.getItem('ukey')) {\r\n                const ukey = localStorage.getItem('ukey');\r\n                const cities = this.data.locationArray.toString();\r\n                if (ukey !== null && cities !== '') {\r\n                    users.saveCities(cities, ukey);\r\n                    alert('Zapisano poprawnie');\r\n                }\r\n            }\r\n            else alert('Musisz być zalogowany!');\r\n        },\r\n        deleteCity(index: number) {\r\n            this.data.locationArray.splice(index, 1);\r\n            this.getForecast();\r\n        },\r\n        async getLocation() {\r\n            if (localStorage.getItem('ukey')) {\r\n                const ukey = localStorage.getItem('ukey');\r\n                if (ukey != null) {\r\n                    await users.getProfile(ukey).then((response) => {\r\n                        if (response != undefined) {\r\n                            const str = response.profile.cities;\r\n                            if (str != '') {\r\n                                const arr: Array<string> = str.split(',');\r\n                                arr.forEach((value) => {\r\n                                    this.data.locationArray.push(value);\r\n                                })\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        onKeydown(e: KeyboardEvent) {\r\n            if (e.key === 'Enter') {\r\n                this.addCity();\r\n            }\r\n        }\r\n    }\r\n});","interface GraphQLError {\r\n  message: string;\r\n}\r\n\r\nexport interface GraphQLQueryResponse<T extends {} = {}> {\r\n  data: T;\r\n  errors?: GraphQLError[];\r\n}\r\n\r\ninterface Hour {\r\n  time: Date,\r\n  temp_c: number,\r\n  condition: {\r\n    text: string,\r\n    icon: string,\r\n    code: number\r\n  },\r\n  wind_kph: number,\r\n  wind_degree: number,\r\n  wind_dir: string,\r\n  pressure_mb: number,\r\n  precip_mm: number,\r\n  humidity: number,\r\n  cloud: number,\r\n  feelslike_c: number,\r\n  windchill_c: number,\r\n  heatindex_c: number,\r\n  dewpoint_c: number,\r\n  will_it_rain: number,\r\n  chance_of_rain: string,\r\n  will_it_snow: number,\r\n  chance_of_snow: string,\r\n  vis_km: number,\r\n  gust_kph: number,\r\n  uv: number\r\n}\r\n\r\ninterface ForecastDay {\r\n  date: Date,\r\n  day: {\r\n    maxtemp_c: number,\r\n    mintemp_c: number,\r\n    avgtemp_c: number,\r\n    maxwind_kph: number,\r\n    totalprecip_mm: number,\r\n    avgvis_km: number,\r\n    avghumidity: number,\r\n    daily_will_it_rain: number,\r\n    daily_chance_of_rain: string,\r\n    daily_will_it_snow: number,\r\n    daily_chance_of_snow: string,\r\n    condition: {\r\n      text: string,\r\n      icon: string,\r\n      code: number\r\n    }\r\n  },\r\n  hour: [Hour]\r\n}\r\n\r\nexport interface Forecast {\r\n  location: {\r\n      name: string,\r\n      region: string,\r\n      country: string,\r\n      lat: number,\r\n      lon: number,\r\n      tz_id: string,\r\n      localtime_epoch: number,\r\n      localtime: string\r\n  },\r\n  current: {\r\n      last_updated_epoch: number,\r\n      last_updated: string,\r\n      temp_c: number,\r\n      temp_f: number,\r\n      is_day: boolean,\r\n      condition: {\r\n          text: string,\r\n          icon: string,\r\n          code: number\r\n      },\r\n      wind_mph: number,\r\n      wind_kph: number,\r\n      wind_degree: number,\r\n      wind_dir: string,\r\n      pressure_mb: number,\r\n      pressure_in: number,\r\n      precip_mm: number,\r\n      precip_in: number,\r\n      humidity: number,\r\n      cloud: number,\r\n      feelslike_c: number,\r\n      feelslike_f: number,\r\n      vis_km: number,\r\n      vis_miles: number,\r\n      uv: number,\r\n      gust_mph: number,\r\n      gust_kph: number\r\n  },\r\n  forecast: {\r\n      forecastday: [ForecastDay]\r\n  }\r\n}\r\n\r\ninterface Base {\r\n  address: string;\r\n  query<T extends {} = {}>(domain: string, query: string, variables?: {}): Promise<T>;\r\n}\r\n\r\nconst base: Base = {\r\n  address: 'http://localhost:3000',\r\n  async query<T extends {} = {}>(domain: any, query: any, variables: any) {\r\n    const res = await fetch(`${this.address}/${domain}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ query, variables })\r\n    });\r\n\r\n    if (res.status === 404) {\r\n      throw Error(await res.text());\r\n    }\r\n\r\n    const json: GraphQLQueryResponse<T> = await res.json();\r\n\r\n    if (json.errors) {\r\n      throw Error(json.errors[0].message);\r\n    }\r\n\r\n    return json.data;\r\n  }\r\n};\r\n\r\nexport const forecastService = {\r\n  async getForecast(location: string) {\r\n    return await base.query<Promise<Forecast>>('forecast', `\r\n   query{\r\n  getForecast(location:\"${location}\"){\r\n  location{\r\n  name\r\n\tregion\r\n  country\r\n  localtime\r\n}\r\n  current{\r\n    temp_c\r\n    condition{\r\n      text\r\n      icon\r\n    }\r\n    wind_kph\r\n    humidity\r\n    cloud\r\n    feelslike_c\r\n    precip_mm\r\n  }\r\n  forecast{\r\n    forecastday{\r\n      date\r\n      day{\r\n        avgtemp_c\r\n        avghumidity\r\n        daily_will_it_rain\r\n        condition{\r\n          text\r\n          icon\r\n        }\r\n      }\r\n      hour{\r\n        time\r\n        temp_c\r\n        condition{\r\n          text\r\n          icon\r\n        }\r\n        humidity\r\n      }\r\n    }\r\n  }\r\n}\r\n}\r\n    `);\r\n  }\r\n}","import CurrentWeather from './CurrentWeather.vue';\r\n\r\nexport default CurrentWeather;","import Vue from 'vue';\r\nimport DailyForecast from '../DailyForecast';\r\nexport default Vue.extend({\r\n    name: 'CurrentWeather',\r\n    components:{DailyForecast},\r\n    props:[\"currentWeather\"]\r\n});","import DailyForecast from './DailyForecast.vue';\r\n\r\nexport default DailyForecast;","import Vue from 'vue';\r\nexport default Vue.extend({\r\n    name: 'DailyForecast',\r\n    props: [\"dayWeather\"]\r\n});","import Login from './Login.vue';\r\n\r\nexport default Login;","import { validate } from 'graphql';\r\nimport Vue from 'vue';\r\nimport { use } from 'vue/types/umd';\r\nimport { LoginResponse, User, users } from '../../services/userDataService'\r\ninterface Data {\r\n    data: {\r\n        email: string,\r\n        password: string,\r\n        error: string | null,\r\n        submitted: boolean,\r\n        isValidSession:boolean\r\n    }\r\n}\r\nexport default Vue.extend({\r\n    name: 'Login',\r\n    data(): Data {\r\n        return {\r\n            data: {\r\n                email: '',\r\n                password: '',\r\n                error: null,\r\n                submitted: false,\r\n                isValidSession:false\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        this.validateUser();\r\n    },\r\n    methods: {\r\n        async login(email: string, password: string) {\r\n            try {\r\n                if (!this.data.isValidSession) {\r\n                    await users.login(email, password).then((response) => {\r\n                        localStorage.setItem('ukey', response.login.ukey);\r\n                    });\r\n                }\r\n                this.$router.push('./');\r\n                location.reload();\r\n                \r\n            }\r\n            catch (error) {\r\n                this.data.error = error;\r\n            }\r\n\r\n        },\r\n        async validateUser() {\r\n            try {\r\n                await users.validate(localStorage.getItem('ukey')).then(response => {\r\n                    this.data.isValidSession = response;\r\n                    return response;\r\n                });\r\n            }\r\n            catch (err) {\r\n                this.data.error = err;\r\n            }\r\n        }\r\n    }\r\n});","import Register from './Register.vue';\r\n\r\nexport default Register;","import Vue from 'vue';\r\nimport { users } from '../../services/userDataService'\r\ninterface Data {\r\n    data: {\r\n        email: string,\r\n        password: string,\r\n        confirmation: string,\r\n        submitted: boolean,\r\n        error: string | null,\r\n    }\r\n}\r\nexport default Vue.extend({\r\n    name: 'Register',\r\n    data(): Data {\r\n        return {\r\n            data: {\r\n                email: '',\r\n                password: '',\r\n                confirmation:'',\r\n                submitted: false,\r\n                error: null\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        async register(email: string, password: string, confirmation: string) {\r\n            try {\r\n                await users.register(email, password, confirmation).then((response) => {\r\n                    alert('Pomyślnie zarejestrowano');\r\n                    return response;\r\n                });\r\n\r\n            }\r\n            catch (error) {\r\n                this.data.error = error;\r\n            }\r\n           \r\n        }\r\n    }\r\n});","import Confirm from './Confirm.vue';\r\n\r\nexport default Confirm;","import Vue from 'vue';\r\nimport { users } from '../../services/userDataService';\r\nexport default Vue.extend({\r\n    name: 'Confirm',\r\n    props: {\r\n        email: {\r\n            type: String as () => string | undefined\r\n        }\r\n    },\r\n    mounted() {\r\n        this.confirm(this.email);\r\n    },\r\n    methods: {\r\n        async confirm(email: string | undefined) {\r\n            if (email === undefined) {\r\n                alert('Coś poszło nie tak');\r\n            }\r\n            else return await users.confirm(email);\r\n            this.$router.push({ name: 'login' });\r\n        }\r\n    }\r\n});"]}