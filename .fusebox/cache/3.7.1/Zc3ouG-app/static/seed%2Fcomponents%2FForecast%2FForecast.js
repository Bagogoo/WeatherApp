module.exports = { contents: "\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vue_1 = __importDefault(require(\"vue\"));\r\nconst forecastDataservice_1 = require(\"../../services/forecastDataservice\");\r\nexports.default = vue_1.default.extend({\r\n    name: 'Forecast',\r\n    props: {\r\n        locationProp: String\r\n    },\r\n    data() {\r\n        return {\r\n            data: {\r\n                forecast: [],\r\n                location: this.locationProp,\r\n                dataLoaded: false\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        getForecast() {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                const forecastResponse = (yield forecastDataservice_1.forecastService.getForecast(this.data.location).then((response) => {\r\n                    var _a;\r\n                    (_a = this.data.forecast) === null || _a === void 0 ? void 0 : _a.push(response);\r\n                    this.data.dataLoaded = true;\r\n                }));\r\n                console.log(this.data.forecast);\r\n            });\r\n        }\r\n    }\r\n});\r\n//# sourceMappingURL=Forecast.js.map",
dependencies: ["vue","../../services/forecastDataservice"],
sourceMap: "{\"version\":3,\"file\":\"seed/components/Forecast/Forecast.js\",\"sourceRoot\":\"../../\",\"sources\":[\"src/seed/components/Forecast/Forecast.ts\"],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;AAAA,8CAAsB;AACtB,4EAAqE;AAoDrE,kBAAe,aAAG,CAAC,MAAM,CAAC;IACtB,IAAI,EAAE,UAAU;IAChB,KAAK,EAAE;QACH,YAAY,EAAE,MAAM;KACvB;IACD,IAAI;QACA,OAAO;YACH,IAAI,EAAE;gBACF,QAAQ,EAAC,EAAE;gBACX,QAAQ,EAAE,IAAI,CAAC,YAAY;gBAC3B,UAAU,EAAE,KAAK;aACpB;SACJ,CAAA;IACL,CAAC;IACD,OAAO,EAAE;QACC,WAAW;;gBACb,MAAM,gBAAgB,GAAG,CAAC,MAAM,qCAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;;oBAC9F,MAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,0CAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACnC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBAChC,CAAC,CAAC,CAAC,CAAC;gBACJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACpC,CAAC;SAAA;KACJ;CAEJ,CAAC,CAAC\",\"sourcesContent\":[\"import Vue from 'vue';\\r\\nimport { forecastService } from '../../services/forecastDataservice';\\r\\n\\r\\ninterface Forecast {\\r\\n    location: {\\r\\n        name: string,\\r\\n        region: string,\\r\\n        country: string,\\r\\n        lat: number,\\r\\n        lon: number,\\r\\n        tz_id: string,\\r\\n        localtime_epoch: number,\\r\\n        localtime: string\\r\\n    },\\r\\n    current: {\\r\\n        last_updated_epoch: number,\\r\\n        last_updated: string,\\r\\n        temp_c: number,\\r\\n        temp_f: number,\\r\\n        is_day: boolean,\\r\\n        condition: {\\r\\n            text: string,\\r\\n            icon: string,\\r\\n            code: number\\r\\n        },\\r\\n        wind_mph: number,\\r\\n        wind_kph: number,\\r\\n        wind_degree: number,\\r\\n        wind_dir: string,\\r\\n        pressure_mb: number,\\r\\n        pressure_in: number,\\r\\n        precip_mm: number,\\r\\n        precip_in: number,\\r\\n        humidity: number,\\r\\n        cloud: number,\\r\\n        feelslike_c: number,\\r\\n        feelslike_f: number,\\r\\n        vis_km: number,\\r\\n        vis_miles: number,\\r\\n        uv: number,\\r\\n        gust_mph: number,\\r\\n        gust_kph: number\\r\\n    }\\r\\n}\\r\\n\\r\\ninterface Data {\\r\\n    data: {\\r\\n        forecast: Forecast[],\\r\\n        location: string,\\r\\n        dataLoaded: boolean\\r\\n    }\\r\\n}\\r\\n\\r\\nexport default Vue.extend({\\r\\n    name: 'Forecast',\\r\\n    props: {\\r\\n        locationProp: String\\r\\n    },\\r\\n    data(): Data {\\r\\n        return {\\r\\n            data: {\\r\\n                forecast:[],\\r\\n                location: this.locationProp,\\r\\n                dataLoaded: false\\r\\n            }\\r\\n        }\\r\\n    },\\r\\n    methods: {\\r\\n        async getForecast() {\\r\\n            const forecastResponse = (await forecastService.getForecast(this.data.location).then((response) => {\\r\\n                this.data.forecast?.push(response);\\r\\n                this.data.dataLoaded = true;\\r\\n            }));\\r\\n            console.log(this.data.forecast);\\r\\n        }\\r\\n    }\\r\\n\\r\\n});\\r\\n\"]}",
headerContent: undefined,
mtime: 1626785819416,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
